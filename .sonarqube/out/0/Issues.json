{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.8.0.0",
        "fileVersion": "4.8.0-3.23524.11 (f43cd10b)",
        "semanticVersion": "4.8.0",
        "language": "en-GB"
      },
      "results": [
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EF7Assessment/PatientContext.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 39,
                  "endLine": 21,
                  "endColumn": 93
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'connectionString' in 'DbContextOptionsBuilder MySQLDbContextOptionsExtensions.UseMySQL(DbContextOptionsBuilder optionsBuilder, string connectionString, Action<MySQLDbContextOptionsBuilder>? mySqlOptionsAction = null)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EF7Assessment/PatientContext.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 37,
                  "endLine": 24,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Patients' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EF7Assessment/PatientContext.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 31,
                  "endLine": 10,
                  "endColumn": 39
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/EF7Assessment/PatientContext.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 31,
                  "endLine": 10,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0219",
          "level": "warning",
          "message": "The variable 'updatedata' is assigned but its value is never used",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EF7Assessment/Program.cs",
                "region": {
                  "startLine": 131,
                  "startColumn": 19,
                  "endLine": 131,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "S2068",
          "level": "warning",
          "message": "\"password\" detected here, make sure this is not a hard-coded credential.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EF7Assessment/appsettings.json",
                "region": {
                  "startLine": 3,
                  "startColumn": 30,
                  "endLine": 3,
                  "endColumn": 114
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'updatedata'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EF7Assessment/Program.cs",
                "region": {
                  "startLine": 135,
                  "startColumn": 15,
                  "endLine": 135,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'updatedata'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EF7Assessment/Program.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 15,
                  "endLine": 142,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'updatedata'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EF7Assessment/Program.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 15,
                  "endLine": 150,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'updatedata'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EF7Assessment/Program.cs",
                "region": {
                  "startLine": 157,
                  "startColumn": 15,
                  "endLine": 157,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'updatedata'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EF7Assessment/Program.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 15,
                  "endLine": 164,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2190",
          "level": "warning",
          "message": "Add a way to break out of this method's recursion.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EF7Assessment/Program.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 17,
                  "endLine": 10,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1264",
          "level": "warning",
          "message": "Replace this 'for' loop with a 'while' loop.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EF7Assessment/Program.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 6,
                  "endLine": 12,
                  "endColumn": 9
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CS0219": {
          "id": "CS0219",
          "shortDescription": "Variable is assigned but its value is never used",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0219)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8600": {
          "id": "CS8600",
          "shortDescription": "Converting null literal or possible null value to non-nullable type.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8600)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8604": {
          "id": "CS8604",
          "shortDescription": "Possible null reference argument.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8604)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S1264": {
          "id": "S1264",
          "shortDescription": "A \"while\" loop should be used instead of a \"for\" loop",
          "fullDescription": "When only the condition expression is defined in a for loop, and the initialization and increment expressions are missing, a while loop should be used instead to increase readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1264",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1854": {
          "id": "S1854",
          "shortDescription": "Unused assignments should be removed",
          "fullDescription": "Dead stores refer to assignments made to local variables that are subsequently never used or immediately overwritten. Such assignments are unnecessary and don’t contribute to the functionality or clarity of the code. They may even negatively impact performance. Removing them enhances code cleanliness and readability. Even if the unnecessary operations do not do any harm in terms of the program’s correctness, they are - at best - a waste of computing resources.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1854",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2068": {
          "id": "S2068",
          "shortDescription": "Hard-coded credentials are security-sensitive",
          "fullDescription": "Because it is easy to extract strings from an application source code or binary, credentials should not be hard-coded. This is particularly true for applications that are distributed or that are open-source.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2068",
          "properties": {
            "category": "Blocker Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2190": {
          "id": "S2190",
          "shortDescription": "Loops and recursions should not be infinite",
          "fullDescription": "Having an infinite loop or recursion will lead to a program failure or a program never finishing the execution.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2190",
          "properties": {
            "category": "Blocker Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}